// <auto-generated />
using System;
using Kairos.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kairos.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250409104326_MigrationEventos")]
    partial class MigrationEventos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kairos.Domain.Entities.EventosEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<int>("TipoEventoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoEventoId");

                    b.ToTable("Tbl_Eventos", (string)null);
                });

            modelBuilder.Entity("Kairos.Domain.Entities.TipoEventoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Tbl_TipoEvento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Ensaio"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Evento Especial"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Reunião"
                        });
                });

            modelBuilder.Entity("Kairos.Domain.Entities.EventosEntity", b =>
                {
                    b.HasOne("Kairos.Domain.Entities.TipoEventoEntity", "TipoEvento")
                        .WithMany("Eventos")
                        .HasForeignKey("TipoEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TipoEvento_Eventos");

                    b.Navigation("TipoEvento");
                });

            modelBuilder.Entity("Kairos.Domain.Entities.TipoEventoEntity", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
